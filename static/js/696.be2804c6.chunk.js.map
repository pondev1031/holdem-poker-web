{"version":3,"file":"static/js/696.be2804c6.chunk.js","mappings":"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","sources":["sections/wallet/view.tsx","pages/home/wallet.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport * as Yup from 'yup';\n\n// @mui\nimport {\n  Box,\n  Stack,\n  Typography,\n  Chip,\n  Avatar,\n  IconButton,\n  Button,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  LinearProgress,\n  Container,\n} from '@mui/material';\n// store\nimport { useSelector, useDispatch } from 'src/store';\n// hooks\nimport useLocales from 'src/locales/use-locales';\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport Iconify from 'src/components/iconify';\nimport { useSettingsContext } from 'src/components/settings';\n\n// types\n\n// ----------------------------------------------------------------------\n\nexport default function ProfileView() {\n  const dispatch = useDispatch();\n  const { t } = useLocales();\n\n  const { user } = useSelector((store) => store.auth);\n\n  const settings = useSettingsContext();\n\n  const ProfileSchema = Yup.object().shape({\n    amount: Yup.number().min(0).required('ID is required'),\n  });\n\n  const defaultValues = {\n    amount: 0,\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ProfileSchema),\n    defaultValues,\n  });\n\n  const {\n    setValue,\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n      reset();\n    }\n  });\n\n  const handleAddAmount = (value: number) => {\n    setValue('amount', value);\n  };\n\n  return (\n    <>\n      <Stack\n        sx={{\n          px: 4,\n          py: 2,\n          height: 133,\n          bgcolor: '#0000008a',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography variant=\"h5\">{t('label.wallet')}</Typography>\n\n        <Stack\n          width={1}\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          spacing={{ xs: 0.5, sm: 3 }}\n        >\n          <Avatar src=\"/assets/pokerking/avatars/avatar0.jpg\" sx={{ width: 70, height: 70 }} />\n\n          <Stack sx={{ width: 1 }}>\n            <Typography color=\"text.disabled\">{t('label.wallet_balance')}</Typography>\n            <Typography variant=\"h6\">G {user?.money || 0}</Typography>\n          </Stack>\n        </Stack>\n      </Stack>\n      <Container maxWidth={settings.themeStretch ? false : 'lg'} sx={{ mt: 4 }}>\n        <FormProvider methods={methods} onSubmit={onSubmit} style={{ height: '100%' }}>\n          <Stack>\n            <center>\n              <Typography>{t('label.top_up_your_wallet_balance')}</Typography>\n            </center>\n            <Stack gap={3}>\n              <RHFTextField\n                name=\"amount\"\n                label={t('label.enter_amount_to_add')}\n                variant=\"standard\"\n                sx={{ fontSize: 26 }}\n              />\n            </Stack>\n          </Stack>\n          <Stack gap={3} mt={3}>\n            <Typography fontSize=\"small\" color=\"text.disabled\">\n              {t('label.add_a_quick_amount')}\n            </Typography>\n            <Stack direction=\"row\" gap={3}>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                sx={{ width: 100, height: 50 }}\n                onClick={() => handleAddAmount(5000)}\n              >\n                +5000\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                sx={{ width: 100, height: 50 }}\n                onClick={() => handleAddAmount(10000)}\n              >\n                +10000\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                sx={{ width: 100, height: 50 }}\n                onClick={() => handleAddAmount(20000)}\n              >\n                +20000\n              </Button>\n            </Stack>\n          </Stack>\n          <Stack mt={3} gap={3}>\n            <Button color=\"primary\" variant=\"contained\" sx={{ width: 150, height: 40 }}>\n              {t('label.add_cash')}\n            </Button>\n            <Box>\n              <Chip\n                icon={<Iconify icon=\"logos:telegram\" />}\n                label=\"Connect to Agent\"\n                color=\"secondary\"\n                sx={{ px: 3 }}\n                component=\"a\"\n                href=\"https://t.me/pontrue\"\n                variant=\"outlined\"\n                target=\"_blank\"\n                clickable\n              />\n            </Box>\n          </Stack>\n        </FormProvider>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport WalletView from 'src/sections/wallet/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title>PokerKing : Wallet</title>\n      </Helmet>\n\n      <WalletView />\n    </>\n  );\n}\n"],"names":["ProfileView","useDispatch","t","useLocales","user","useSelector","store","auth","settings","useSettingsContext","ProfileSchema","Yup","shape","amount","min","required","methods","useForm","resolver","yupResolver","defaultValues","setValue","reset","handleSubmit","onSubmit","formState","isSubmitting","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","error","stop","_x","apply","arguments","handleAddAmount","value","_jsxs","_Fragment","children","Stack","sx","px","py","height","bgcolor","alignItems","justifyContent","_jsx","Typography","variant","width","direction","spacing","xs","sm","Avatar","src","color","money","Container","maxWidth","themeStretch","mt","FormProvider","style","gap","RHFTextField","name","label","fontSize","Button","onClick","Box","Chip","icon","Iconify","component","href","target","clickable","Page","Helmet","WalletView"],"sourceRoot":""}