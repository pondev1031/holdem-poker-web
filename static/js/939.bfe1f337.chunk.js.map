{"version":3,"file":"static/js/939.bfe1f337.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","sections/board/view.tsx","pages/home/index.tsx","utils/format-number.ts"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { useEffect, useMemo, useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Container,\n  CardHeader,\n  Stack,\n  Typography,\n  Chip,\n  Avatar,\n  IconButton,\n  Button,\n} from '@mui/material';\n// store\nimport { useSelector, useDispatch } from 'src/store';\nimport { edit } from 'src/store/reducers/auth';\n// hooks\nimport useSocket from 'src/hooks/use-socket';\nimport useLocales from 'src/locales/use-locales';\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n\n// components\nimport { useRouter } from 'src/routes/hooks';\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport { useSettingsContext } from 'src/components/settings';\nimport { GuidePopover, AccountPopover, LanguagePopover } from 'src/layouts/_common';\nimport { paths } from 'src/routes/paths';\n\n// types\nimport { fCurrency } from 'src/utils/format-number';\nimport { SOCKET_KEY } from 'src/config-global';\nimport { IRoom } from 'src/types';\n\n// ----------------------------------------------------------------------\n\nexport default function UsersView() {\n  const dispatch = useDispatch();\n  const { t } = useLocales();\n  const router = useRouter();\n  const store = useSelector((e) => e.auth);\n  const { sendSocket, lastJsonMessage } = useSocket();\n  const settings = useSettingsContext();\n  const smDown = useResponsive('down', 'sm');\n\n  const [rooms, setRooms] = useState<IRoom[]>([]);\n\n  useEffect(() => {\n    if (!store.user?.id) return;\n    sendSocket({\n      roomId: -1,\n      key: SOCKET_KEY.GET_SPECTATE_ROOMS,\n      playerId: store.user?.id,\n      roomSortParam: 'all',\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [store.user?.id]);\n\n  useEffect(() => {\n    if (!lastJsonMessage) return;\n    const { key, data, user } = lastJsonMessage;\n    if (key !== SOCKET_KEY.GET_SPECTATE_ROOMS || !data) return;\n    setRooms(data);\n    dispatch(edit(user));\n  }, [lastJsonMessage, dispatch]);\n\n  const selectRoom = (roomId: number) => {\n    router.push(paths.room.view(roomId));\n  };\n\n  return (\n    <>\n      <Stack\n        sx={{\n          px: { xs: 1, sm: 4 },\n          height: 64,\n          bgcolor: '#0000008a',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        {!smDown && (\n          <Typography variant=\"h5\">\n            {t('label.welcome_to')} {store.user?.name}!\n          </Typography>\n        )}\n\n        <Stack\n          flexGrow={1}\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"flex-end\"\n          spacing={{ xs: 0, sm: 1 }}\n        >\n          {!smDown && <GuidePopover />}\n          <Chip\n            avatar={<Avatar alt=\"Natacha\" src=\"/assets/pokerking/coin.png\" />}\n            label={`${fCurrency(Number(store.user?.money || 0).toFixed(2))} G`}\n            variant=\"outlined\"\n            sx={{ px: 1, py: 0.5, borderRadius: 50, border: '2px solid #cfb13a' }}\n          />\n\n          <LanguagePopover />\n\n          <AccountPopover />\n        </Stack>\n      </Stack>\n      <Container maxWidth={settings.themeStretch ? false : 'lg'} sx={{ mt: 2 }}>\n        <Scrollbar>\n          {rooms.map((room) => (\n            <Card key={room.roomId} sx={{ bgcolor: '#000000cc', mt: 1 }}>\n              <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Stack\n                  sx={{\n                    flexDirection: 'row',\n                    letterSpacing: 2,\n                    fontWeight: 'bold',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      width: 10,\n                      height: 70,\n                      backgroundColor: '#ffcc00',\n                    }}\n                  />\n                  <Stack justifyContent=\"center\" ml={3}>\n                    <Typography\n                      sx={{\n                        color: '#e1c021',\n                      }}\n                    >\n                      {`${room.maxSeats} ${t('label.seat')} / ${room.playerCount}`}\n                    </Typography>\n                    <Typography>{`${room.roomMinBet} G`}</Typography>\n                  </Stack>\n                </Stack>\n                <Button\n                  sx={{\n                    px: 4,\n                    mr: 2,\n                    width: 113,\n                    height: 30,\n                    color: 'black',\n                    background: 'url(/assets/pokerking/button/button2.png)',\n                    backgroundSize: 'contain',\n                  }}\n                  onClick={() => selectRoom(room.roomId)}\n                >\n                  {`${room.roomMinBet} G`}\n                </Button>\n              </Stack>\n            </Card>\n          ))}\n        </Scrollbar>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport GameBoardView from 'src/sections/board/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title>PokerKing</title>\n      </Helmet>\n\n      <GameBoardView />\n    </>\n  );\n}\n","import numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\ntype InputValue = string | number | null;\n\nexport function fNumber(number: InputValue) {\n  return numeral(number).format();\n}\n\nexport function fCurrency(number: InputValue) {\n  const format = number ? numeral(number).format('0,0.00') : '';\n\n  return result(format, '.00');\n}\n\nexport function fPercent(number: InputValue) {\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\n\n  return result(format, '.0');\n}\n\nexport function fShortenNumber(number: InputValue) {\n  const format = number ? numeral(number).format('0.00a') : '';\n\n  return result(format, '.00');\n}\n\nexport function fData(number: InputValue) {\n  const format = number ? numeral(number).format('0.0 b') : '';\n\n  return result(format, '.0');\n}\n\nfunction result(format: string, key = '.00') {\n  const isInteger = format.includes(key);\n\n  return isInteger ? format.replace(key, '') : format;\n}\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","_props$raised","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","UsersView","_store$user3","_store$user4","_store$user5","dispatch","useDispatch","t","useLocales","router","useRouter","store","useSelector","e","auth","_useSocket","useSocket","sendSocket","lastJsonMessage","settings","useSettingsContext","smDown","useResponsive","_useState","useState","_useState2","_slicedToArray","rooms","setRooms","useEffect","_store$user","_store$user2","user","id","roomId","key","SOCKET_KEY","GET_SPECTATE_ROOMS","playerId","roomSortParam","data","edit","_jsxs","_Fragment","children","Stack","sx","px","xs","sm","height","bgcolor","flexDirection","alignItems","justifyContent","Typography","variant","flexGrow","direction","spacing","GuidePopover","Chip","avatar","Avatar","alt","src","label","concat","fCurrency","Number","money","toFixed","py","borderRadius","border","LanguagePopover","AccountPopover","Container","maxWidth","themeStretch","mt","Scrollbar","map","room","Card","letterSpacing","fontWeight","Box","width","backgroundColor","ml","color","maxSeats","playerCount","roomMinBet","Button","mr","background","backgroundSize","onClick","push","paths","view","Page","Helmet","GameBoardView","number","result","numeral","format","arguments","length","includes","replace"],"sourceRoot":""}